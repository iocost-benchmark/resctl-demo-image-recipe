{{ $variant := or .variant "resctl-demo" }}
{{ $ospack := or .ospack (printf "%s-ospack" $variant) }}
{{ $mirror := or .mirror "https://deb.debian.org/debian" }}
{{ $suite := or .suite "bookworm" }}
{{ $kernel_branch := or .kernel_branch "resctl-demo" }}
{{ $resctl_demo_src := or .resctl_demo_src "crates.io" }}
{{ $version := or .version "local" }}

architecture: amd64

actions:
  - action: recipe
    recipe: check-variant.yaml
    variables:
      variant: {{ $variant }}

  - action: debootstrap
    suite: {{ $suite }}
    components:
      - main
      - contrib
      - non-free
      - non-free-firmware
    mirror: {{ $mirror }}
    variant: minbase

  - action: apt
    description: Core packages
    packages:
      - apt-transport-https
      - dbus
      - dialog
      - gnupg
      - initramfs-tools
      - sudo
      - systemd-sysv
      - udev

  - action: run
    description: Add version metadata to /etc/os-release
    command: |
      echo "IMAGE_VERSION={{ $version }}" >> ${ROOTDIR}/etc/os-release

{{ if eq $kernel_branch "debs" }}
  # Use the kernel package from the filesystem
  - action: overlay
    description: Copy kernel package
    source: debs
    destination: debs
{{ else }}
  # Download the kernel package from GitHub
  - action: download
    url: https://nightly.link/iocost-benchmark/resctl-demo-linux/workflows/ci.yaml/{{ $kernel_branch }}/resctl-demo-kernel.zip
    name: kernel
    unpack: true
    compression: zip

  - action: overlay
    description: Copy kernel package
    origin: kernel
    destination: debs
{{ end }}

  - action: run
    description: Inspect kernel packages
    command: ls -la ${ROOTDIR}/debs

  - action: run
    description: Install kernel packages
    chroot: true
    command: rm debs/*dbg*.deb || true;
             apt-get install --yes --allow-downgrades ./debs/*.deb &&
             rm -rf /debs

  - action: apt
    description: Install bootloader packages
    packages:
      - systemd-boot
      - systemd-boot-efi

  - action: run
    description: Mark custom packages as hold
    chroot: true
    command: apt-mark hold linux*

  - action: apt
    description: Networking packages
    packages:
      - iproute2
      - iputils-ping
      - network-manager
      - wpasupplicant

  - action: apt
    description: openssh-server
    packages:
      - openssh-server

  - action: apt
    description: cloud-init (performs rootfs resize and ssh adds keys)
    packages:
      - cloud-init
      - cloud-image-utils
      - cloud-guest-utils
      - btrfs-progs

  - action: apt
    description: Useful userspace packages
    packages:
      - htop
      - bc
      - bcc
      - curl
      - fish
      - jq
      - less
      - lsscsi
      - mosh
      - nano
      - nvme-cli
      - screen
      - stress
      - sysstat
      - tmux
      - vim
      - wget
      - systemd-resolved

  - action: apt
    description: Runtime dependencies for resctl-demo
    recommends: true
    packages:
      - oomd
      - gnuplot-nox
      - python3-bpfcc
      - python3-drgn
      - libssl-dev
      - libelf-dev
      - fio
      - build-essential
      - wget
      - bison
      - flex
      - pkgconf
      - git
      - fontconfig
      - ghostscript
      - imagemagick
      - librsvg2-bin

  - action: run
    description: Set python3 as default
    chroot: true
    command: update-alternatives --install /usr/bin/python python /usr/bin/python3 1

  - action: run
    description: Fix imagemagick policy configuration; see https://github.com/facebookexperimental/resctl-demo/issues/256
    chroot: true
    label: sed
    command: sed -i 's/domain="coder" rights="none"/domain="coder" rights="read | write"/g' /etc/ImageMagick-*/policy.xml

  - action: run
    description: Disable oomd
    chroot: true
    command: systemctl mask oomd.service

  - action: run
    description: Set hostname to {{ $variant }}
    command: echo "{{ $variant }}" > ${ROOTDIR}/etc/hostname

  - action: run
    description: Enable systemd-networkd
    chroot: true
    command: systemctl enable systemd-networkd

  - action: run
    description: Mask networking.service (dependency of cloud-init)
    chroot: true
    command: systemctl mask networking.service

  - action: run
    description: Enable systemd-resolved
    chroot: true
    command: systemctl enable systemd-resolved

  - action: run
    description: Disable systemd-sysusers
    chroot: true
    command: systemctl mask systemd-sysusers.service

  - action: overlay
    description: Configuration for locale
    source: overlays/locale

  - action: overlay
    description: Configuration for motd
    source: overlays/motd

  - action: overlay
    description: Configuration for pivot
    source: overlays/pivot

  - action: overlay
    description: Configuration for sshd
    source: overlays/sshd

  - action: overlay
    description: Configuration for swap
    source: overlays/swap

  - action: overlay
    description: Configuration for cloud-init
    source: overlays/cloud-init

  - action: overlay
    description: Configuration for systemd-networkd
    source: overlays/systemd-networkd

  - action: overlay
    description: Configuration for systemd-resolved
    source: overlays/systemd-resolved

  - action: overlay
    description: Configuration for systemd-repart
    source: overlays/systemd-repart

  - action: run
    description: Setup root user
    chroot: true
    command: echo "root:root" | chpasswd

  - action: run
    description: Setup demo user
    chroot: true
    script: scripts/setup-demo-user.sh

  - action: overlay
    description: Configuration for resctl-demo
    source: overlays/resctl-demo

  - action: run
    description: Change system PRETTY_NAME
    command: sed -i "s/PRETTY_NAME=.*/PRETTY_NAME=\"{{ $variant }} test image\"/g" ${ROOTDIR}/etc/os-release

  - action: run
    description: Add variant to system metadata
    command: echo "VARIANT={{ $variant }}" >> ${ROOTDIR}/etc/os-release

  - action: download
    description: Download linux payload tarball
    url: https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.16.11.tar.xz
    name: linux-payload
    filename: linux.tar
    compression: xz

  - action: overlay
    description: Copy linux payload tarball into image
    origin: linux-payload
    destination: /usr/local/resctl-demo/linux.tar

  - action: run
    description: Run print-drive-model at boot
    command: echo "\$HOME/.bin/print-drive-model" >> ${ROOTDIR}/home/demo/.bashrc

  - action: run
    description: Fix demo user home permissions
    chroot: true
    command: chown -R demo:demo /home/demo

  - action: run
    description: Install resctl-demo
    chroot: true
    label: install-resctl-demo
    command: su demo -c "/home/demo/.bin/install-resctl-demo {{ $resctl_demo_src }}"

  - action: run
    description: Install Adobe fonts
    chroot: true
    script: scripts/install-adobe-fonts.sh

  - action: run
    description: Remove empty fstab
    command: rm ${ROOTDIR}/etc/fstab

  - action: pack
    file: {{ $ospack }}.tar.gz
