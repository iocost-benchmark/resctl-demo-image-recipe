{{ $variant := or .variant "resctl-demo" }}
{{ $ospack := or .ospack (printf "%s-ospack" $variant) }}
{{ $image := or .image (printf "%s-image-efiboot" $variant)  }}
{{ $imagesize := or .imagesize "32GB" }}
{{ $cmdline := or .cmdline "console=tty0 rootwait fsck.mode=auto fsck.repair=yes systemd.unified_cgroup_hierarchy=1 mem=16G systemd.show_status=0 quiet" }}
{{ $pack := or .pack "true" }}
{{ $suite := or .suite "bookworm" }}
{{ $version := or .version "local" }}

architecture: amd64

actions:
  - action: recipe
    recipe: check-variant.yaml
    variables:
      variant: {{ $variant }}

  - action: image-partition
    imagename: {{ $image }}.img
    imagesize: {{ $imagesize }}
    partitiontype: gpt
    mountpoints:
      - mountpoint: /
        partition: system
        options:
          - rw
          - discard=async
          - x-systemd.growfs
      - mountpoint: /boot/efi
        partition: EFI
        buildtime: true
    partitions:
      - name: EFI
        partlabel: efi
        parttype: c12a7328-f81f-11d2-ba4b-00a0c93ec93b
        fs: vfat
        start: 6176s
        end: 256M
        flags: [ boot ]
      - name: system
        partlabel: system
        parttype: 4f68bce3-e8cd-4db1-96e7-fbcaf984b709
        fs: btrfs
        start: 256M
        end: 100%

  - action: filesystem-deploy
    description: Deploying ospack onto image
{{ if eq $variant "resctl-demo" }}
    append-kernel-cmdline: {{ $cmdline }} console=ttyS0,115200n1
{{ else if eq $variant "resctl-demo-meta" }}
    append-kernel-cmdline: {{ $cmdline }} console=ttyS1,57600n8
{{ else }}
    append-kernel-cmdline: {{ $cmdline }}
{{ end }}

  - action: unpack
    file: {{ $ospack }}.tar.gz

  - action: apt
    description: Install kernel
    packages:
      - linux-image-amd64
      - linux-headers-amd64

  - action: run
    description: Upgrade kernel to backports
    chroot: true
    command: |
      echo "deb http://deb.debian.org/debian {{ $suite }}-backports main" > /etc/apt/sources.list.d/backports.list
      apt-get update
      apt-get install --yes -t {{ $suite }}-backports linux-image-amd64

  - action: apt
    description: Install useful packages for baremetal
    packages:
      - network-manager
      - firmware-atheros
      - firmware-brcm80211
      - firmware-iwlwifi
      - firmware-linux
      - firmware-realtek

  - action: overlay
    description: Configuration for systemd-boot
    source: overlays/systemd-boot

  - action: run
    description: Install systemd-boot
    chroot: true
    command: bootctl install --path=/boot/efi

  - action: run
    description: Create loader entries directory
    chroot: true
    command: mkdir -p /boot/efi/$(cat /etc/machine-id)

  - action: run
    description: Install systemd-boot for kernel
    chroot: true
    command: kernel-install add $(ls /usr/lib/modules | head -1) /boot/vmlinuz* /boot/initrd*

  - action: overlay
    description: Getty autologin
    source: overlays/getty-autologin

{{ if eq $variant "resctl-demo-meta" }}
  - action: run
    description: Disable getty
    chroot: true
    command: systemctl mask getty@tty1.service &&
             systemctl mask serial-getty@ttyS1.service

  - action: overlay
    description: Autostart resctl bench
    source: overlays/autostart-resctl-bench
{{ end }}

  - action: run
    description: Setup demo for EFI image
    label: setup-demo-efi.sh
    chroot: true
    script: scripts/setup-demo-efi.sh

  - action: run
    description: Examine disk size
    chroot: true
    command: df -h / /boot/efi

  - action: pack
    description: Pack image contents into tarball (for installer)
    file: {{ $image }}.tar.gz

{{ if eq $pack "true" }}
  - action: run
    description: Convert {{ $image }}.img to {{ $image }}.vmdk
    postprocess: true
    command: qemu-img convert -f raw -O vmdk -o subformat=streamOptimized "$ARTIFACTDIR/{{ $image }}.img" "$ARTIFACTDIR/{{ $image }}.vmdk"

  - action: run
    description: Create block map for {{ $image }}.img
    postprocess: true
    command: bmaptool create "$ARTIFACTDIR/{{ $image }}.img" > "$ARTIFACTDIR/{{ $image }}.img.bmap"

  - action: run
    description: Compress {{ $image }}.img
    postprocess: true
    command: pigz -f "$ARTIFACTDIR/{{ $image }}.img"

  - action: run
    description: Checksum for {{ $image }}.img.gz
    postprocess: true
    command: sha256sum "$ARTIFACTDIR/{{ $image }}.img.gz" > "$ARTIFACTDIR/{{ $image }}.img.gz.sha256"
{{ end }}
